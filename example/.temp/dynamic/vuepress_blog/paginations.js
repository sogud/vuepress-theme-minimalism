/**
 * Generated by "@vuepress/plugin-blog"
 */

import sorters from './pageSorters'
import filters from './pageFilters'

export default [{
  pid: "post",
  id: "post",
  filter: filters.post,
  sorter: sorters.post,
  pages: [{"path":"/list/","interval":[0,19]},{"path":"/list/page/2/","interval":[20,24]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "ngxin",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/ngxin/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "Mac",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/Mac/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "Koa",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/Koa/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "Sequelize",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/Sequelize/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "JavaScript",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/JavaScript/","interval":[0,3]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "面试题",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/面试题/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "git",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/git/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "npm",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/npm/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "yarn",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/yarn/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "Vue",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/Vue/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "Axios",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/Axios/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "Windows",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/Windows/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "MacOS",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/MacOS/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "vuepress",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/vuepress/","interval":[0,12]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "markdown",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/markdown/","interval":[0,5]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "CSS",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/CSS/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "算法",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/算法/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "LeetCode",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/LeetCode/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "frontmatter",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/frontmatter/","interval":[0,3]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "js",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/js/","interval":[0,1]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "theme",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/theme/","interval":[0,4]}],
  prevText: "Prev",
  nextText: "Next",
},
{
  pid: "tags",
  id: "blog",
  filter: filters.tags,
  sorter: sorters.tags,
  pages: [{"path":"/tag/blog/","interval":[0,4]}],
  prevText: "Prev",
  nextText: "Next",
}]